{"version":3,"sources":["shared/Slide/index.tsx","components/App/assets/background.svg","slides/Intro/assets/Title-Part1.svg","slides/Intro/assets/Title-Part2.svg","slides/Intro/assets/row1.svg","slides/Intro/assets/row2.svg","slides/Intro/assets/row3.svg","shared/socket/index.ts","shared/Presentation/index.tsx","slides/Intro/index.tsx","components/App/index.tsx","serviceWorker.ts","index.tsx"],"names":["Slide","currentStep","steps","backwardSteps","selected","this","props","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","content","Fragment","React","Component","module","exports","__webpack_require__","p","socket","io","connect","Presentation","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","backgroundStyle","connectedToRemote","currentSlide","slidesRefs","connectionTimeout","on","data","type","onControlCommand","command","clearTimeout","emit","setState","setTimeout","_this2","window","addEventListener","e","key","next","prev","style","slidesCount","length","slide","current","step","backwardStep","i","background","react_default","react","fallback","slides","src","alt","_this3","children","Children","map","index","createRef","cloneElement","ref","changeBackgroundStyle","bind","PureComponent","appear","showTable","rowsToShow","filter","transform","_this$state","title","title2","row1","row2","row3","Inklings","lazy","Promise","all","then","UsersAndMakers","HereBeDragons","TheDynamicDesignTool","presentation","shared_Presentation","Intro_default","Boolean","location","hostname","match","ReactDOM","render","App_default","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f945e43b.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport './style.scss'\r\n\r\ninterface IProps {\r\n    selected?: boolean\r\n    changeBackgroundStyle?: (object: any) => void\r\n}\r\ninterface IState {}\r\n\r\nclass Slide extends React.Component<IProps, IState> {\r\n\r\n    currentStep: number = 0\r\n    steps: (() => void)[] = []\r\n    backwardSteps: (() => void)[] = []\r\n\r\n    get content () {\r\n        return (<></>)\r\n    }\r\n\r\n    render () {\r\n        const { selected } = this.props\r\n        return (\r\n            <div className={`slide` + (selected ? ' current' : '')}>\r\n                { this.content }\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Slide","module.exports = __webpack_public_path__ + \"static/media/background.de92ce15.svg\";","module.exports = __webpack_public_path__ + \"static/media/Title-Part1.e583665b.svg\";","module.exports = __webpack_public_path__ + \"static/media/Title-Part2.f0e3f36b.svg\";","module.exports = __webpack_public_path__ + \"static/media/row1.f03f9b26.svg\";","module.exports = __webpack_public_path__ + \"static/media/row2.c5eaac21.svg\";","module.exports = __webpack_public_path__ + \"static/media/row3.7b16b4a4.svg\";","import io from 'socket.io-client'\r\n\r\nconst socket = io.connect('https://from-user-to-maker-server.herokuapp.com/')\r\n\r\nexport default socket","import React, { RefObject, Suspense } from 'react'\r\nimport socket from '../socket'\r\n\r\nimport './style.scss'\r\n\r\ninterface IProps {\r\n    background: string\r\n}\r\ninterface IState {\r\n    backgroundStyle: any,\r\n    connectedToRemote: boolean\r\n    currentSlide: number\r\n}\r\n\r\ninterface IRemoteSignal {\r\n    type: 'command' | 'controller-ready',\r\n    command: string | any\r\n}\r\n\r\nclass Presentation extends React.PureComponent<IProps, IState> {\r\n\r\n    state = {\r\n        backgroundStyle: {},\r\n        connectedToRemote: false,\r\n        currentSlide: 0\r\n    }\r\n\r\n    slidesRefs: RefObject<any>[] = []\r\n\r\n    constructor (props: IProps) {\r\n        super(props)\r\n        let connectionTimeout: any = null\r\n        socket.on('remote-control', (data: IRemoteSignal) => {\r\n            if (data.type === 'command') this.onControlCommand(data.command)\r\n            if (data.type === 'controller-ready') {\r\n                if (connectionTimeout) clearTimeout(connectionTimeout)\r\n                socket.emit('remote-control', { type: 'presentation-ready' })\r\n                this.setState({ connectedToRemote: true })\r\n                connectionTimeout = setTimeout(() => { this.setState({ connectedToRemote: false }) }, 4000)\r\n            }\r\n        });\r\n    }\r\n\r\n    componentDidMount () {\r\n        window.addEventListener('keyup', (e) => {\r\n            if (e.key === ' ' || e.key === 'ArrowRight') this.next()\r\n            else if (e.key === 'ArrowLeft') this.prev()\r\n        })\r\n    }\r\n\r\n    onControlCommand (command: string) {\r\n        if (command === 'next') this.next()\r\n        if (command === 'prev') this.prev()\r\n    }\r\n\r\n    private get slides () {\r\n        const { children } = this.props\r\n        const { currentSlide } = this.state\r\n        return React.Children.map(children, (slide, index) => {\r\n            this.slidesRefs[index] = React.createRef()\r\n            if (slide) return React.cloneElement(slide as any, {\r\n                ref: this.slidesRefs[index],\r\n                selected: index === currentSlide,\r\n                changeBackgroundStyle: this.changeBackgroundStyle.bind(this)\r\n            })\r\n        })\r\n    }\r\n\r\n    public changeBackgroundStyle (style: any) {\r\n        this.setState({ backgroundStyle: style })\r\n    }\r\n\r\n    public next () {\r\n        const { currentSlide } = this.state\r\n        const slidesCount: number = this.slidesRefs.length\r\n        const slide = this.slidesRefs[currentSlide].current\r\n        if (slide) {\r\n            if (slide.steps.length > slide.currentStep) {\r\n                slide.currentStep++\r\n                const step = slide.steps[slide.currentStep - 1]\r\n                if (typeof step === 'function') step()\r\n            } else {\r\n                if (slidesCount > currentSlide + 1) {\r\n                    this.setState({ currentSlide: currentSlide + 1 })\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public prev () {\r\n        const { currentSlide } = this.state\r\n        const slide = this.slidesRefs[currentSlide].current\r\n        if (slide) {\r\n            if (0 < slide.currentStep) {\r\n                slide.currentStep--\r\n                const backwardStep = slide.backwardSteps[slide.currentStep]\r\n                const step = slide.steps[slide.currentStep - 1]\r\n                if (typeof backwardStep === 'function') backwardStep()\r\n                else if (typeof step === 'function') step()\r\n            } else {\r\n                if (0 < currentSlide) {\r\n                    this.setState({ currentSlide: currentSlide - 1 })\r\n                }\r\n            }\r\n        }    \r\n    }\r\n\r\n    public goto (i: number) {\r\n        this.setState({ currentSlide: i })\r\n    }\r\n\r\n    render () {\r\n        const { background } = this.props\r\n        const { backgroundStyle } = this.state\r\n        return (\r\n            <div className=\"presentation\">\r\n                <Suspense fallback={() => <div />}>\r\n                    {this.slides}\r\n                </Suspense>\r\n                {background && <img className=\"presentation__background\" style={backgroundStyle} src={background} alt=\"Background\" />}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default Presentation","import React from 'react'\r\n\r\nimport './style.scss'\r\n\r\nimport Slide from '../../shared/Slide'\r\n\r\nimport title from './assets/Title-Part1.svg'\r\nimport title2 from './assets/Title-Part2.svg'\r\n\r\nimport row1 from './assets/row1.svg'\r\nimport row2 from './assets/row2.svg'\r\nimport row3 from './assets/row3.svg'\r\n\r\nexport default class extends Slide {\r\n\r\n    state = {\r\n        appear: false,\r\n        showTable: false,\r\n        rowsToShow: 1\r\n    }\r\n\r\n    steps = [\r\n        () => this.setState({ appear: true }),\r\n        () => {\r\n            const { changeBackgroundStyle } = this.props\r\n            if (changeBackgroundStyle) changeBackgroundStyle({ filter: `blur(35px)`, transform: `translate(-50%, -70%)` })\r\n            this.setState({ showTable: true })\r\n        },\r\n        () => this.setState({ rowsToShow: 2 }),\r\n        () => this.setState({ rowsToShow: 3 }),\r\n    ]\r\n    backwardSteps = [\r\n        () => this.setState({ appear: false }),\r\n        () => {\r\n            const { changeBackgroundStyle } = this.props\r\n            if (changeBackgroundStyle) changeBackgroundStyle({})\r\n            this.setState({ showTable: false })\r\n        },\r\n        () => this.setState({ rowsToShow: 1 }),\r\n        () => this.setState({ rowsToShow: 2 }),\r\n    ]\r\n\r\n    get content () {\r\n        const { appear, showTable, rowsToShow } = this.state\r\n        return (\r\n            <div className={'Intro' + (appear ? ' appear' : '') + (showTable ? ' showTable' : '')}>\r\n                <div className=\"point\">\r\n                    <div className=\"line left\" />\r\n                    <div className=\"line right\" />\r\n                    <img className=\"Intro__title Intro__title__part1\" src={title} alt=\"Design for a\" />\r\n                    <img className=\"Intro__title Intro__title__part2\" src={title2} alt=\"Dynamic Medium\" />\r\n                </div>\r\n                <div className=\"point\">\r\n                    <div className=\"Intro__table\">\r\n                        <img src={row1} alt=\"Computers\"/>\r\n                        <img className={rowsToShow > 1 ? '' : 'hide'} src={row2} alt=\"Internet\"/>\r\n                        <img className={rowsToShow > 2 ? '' : 'hide'} src={row3} alt=\"Design Tools\"/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}","import React, { RefObject, lazy } from 'react'\r\n\r\nimport './style.scss'\r\nimport Presentation from '../../shared/Presentation';\r\n\r\nimport background from './assets/background.svg'\r\nimport Intro from '../../slides/Intro';\r\n\r\nconst Inklings = lazy(() => import('../../slides/Inklings'))\r\nconst UsersAndMakers = lazy(() => import('../../slides/UsersAndMakers'))\r\nconst HereBeDragons = lazy(() => import('../../slides/HereBeDragons'))\r\nconst TheDynamicDesignTool = lazy(() => import('../../slides/TheDynamicDesignTool'))\r\n\r\nexport default class extends React.Component {\r\n\r\n    presentation: RefObject<Presentation> = React.createRef();\r\n\r\n    // componentDidMount () {\r\n    //     const presentation = this.presentation.current\r\n    //     if (presentation) {\r\n    //         presentation.next()\r\n    //         presentation.next()\r\n    //         presentation.next()\r\n    //         presentation.next()\r\n    //         presentation.next()\r\n    //     }\r\n    // }\r\n\r\n    render () {\r\n        return (\r\n            <Presentation ref={this.presentation} background={background}>\r\n                <Intro />\r\n                <Inklings />\r\n                <UsersAndMakers />\r\n                <HereBeDragons />\r\n                <TheDynamicDesignTool />\r\n            </Presentation>\r\n        )\r\n    }\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './stylesheets/main.scss'\r\nimport App from './components/App'\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}